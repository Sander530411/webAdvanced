###
### get token
###
POST {{protocol}}{{host}}:{{port}}/auth/login
content-type: application/json

{
  "username": "admin",
  "password": "admin"
}

> {%
    client.global.set("token", response.body.token);
%}

###
### Test if the server is up and running
###
GET {{protocol}}{{host}}:{{port}}

> {%
    client.test(
        "GET /",
        function () {
            client.assert(response.status === 200, "response code was not 200");
        }
    );
%}

###
### retrieve all products
###
GET {{protocol}}{{host}}:{{port}}/products

> {%
    client.test(
        "GET /products",
        function () {
            client.assert(response.status === 200, "response code was not 200");
            client.assert(response.body.length > 0, "response body was empty");
        }
    );
%}

###
### retrieve a single product filtered by name
###
GET {{protocol}}{{host}}:{{port}}/products?name=title1

> {%
    client.test(
        "GET /products?name=title1",
        function () {
            client.assert(response.status === 200, "response code was not 200");
            client.assert(response.body[0].length === 1, "response body was not correct");
        }
    );
%}

###
### retrieve a single product filtered by id
###
GET {{protocol}}{{host}}:{{port}}/products/1

> {%
    client.test(
        "GET /products/1",
        function () {
            client.assert(response.status === 200, "response code was not 200");
            client.assert(response.body[0].length === 1, "response body was not correct");
        }
    );
%}

###
### make new product unauthorized
###
POST {{protocol}}{{host}}:{{port}}/products

{
    "name": "title1",
    "description": "description1",
    "img": null,
    "expDate" : new Date().toISOString(),
}

> {%
    client.test(
        "POST /products",
        function () {
            client.assert(response.status === 401, "response code was not 401");
        }
    );
%}

###
### make new product authorized
###

POST {{protocol}}{{host}}:{{port}}/products
content-type: application/json
Authorization: {{token}}

{
  "name": "title1",
  "description": "description1",
  "img": null,
  "expDate": 1709299200
}

> {%
    client.test(
        "POST /products",
        function () {
            client.assert(response.status === 201, "response code was not 201");
        }
    );
%}

###
### update product unauthorized
###
DELETE {{protocol}}{{host}}:{{port}}/products/1
content-type: application/json
Authorization: {{token}}

> {%
    client.test(
        "DELETE /products/1",
        function () {
            client.assert(response.status === 200, "response code was not 200");
        }
    );
%}
